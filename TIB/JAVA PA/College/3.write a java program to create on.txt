3.write a java program to create on interface.Sortable with a method sort() that sort array and using acending order .create two class bubblesort annd selection sort implement the sortable interface and provide their own sort method


interface Sortable {
    void sort(int[] arr);
}


class BubbleSort implements Sortable {
    @Override
    public void sort(int[] arr) {
        int n = arr.length;

        for (int i = 0; i < n - 1; i++) {
            for (int j = 0; j < n - i - 1; j++) {
                if (arr[j] > arr[j + 1]) {
                   
                    int temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = temp;
                }
            }
        }

        System.out.println("Array sorted using Bubble Sort");
    }
}


class SelectionSort implements Sortable {
    @Override
    public void sort(int[] arr) {
        int n = arr.length;

        for (int i = 0; i < n - 1; i++) {
            int minIndex = i;
            for (int j = i + 1; j < n; j++) {
                if (arr[j] < arr[minIndex]) {
                    minIndex = j;
                }
            }

            
            int temp = arr[i];
            arr[i] = arr[minIndex];
            arr[minIndex] = temp;
        }

        System.out.println("Array sorted using Selection Sort");
    }
}


public class Main {
    public static void main(String[] args) {
        int[] arr = {64, 25, 12, 22, 11};

        
        Sortable bubbleSort = new BubbleSort();
        bubbleSort.sort(arr.clone()); 
        System.out.println("Sorted Array using Bubble Sort: " + Arrays.toString(arr));

        
        Sortable selectionSort = new SelectionSort();
        selectionSort.sort(arr.clone()); 
        System.out.println("Sorted Array using Selection Sort: " + Arrays.toString(arr));
    }
}
