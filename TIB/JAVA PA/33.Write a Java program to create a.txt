33.Write a Java program to create an interface Sortable with a method sort() that sorts an
array of integers in ascending order. Create two classes BubbleSort and SelectionSort that
implements the Sortable interface and provide their own implementations of the sort()
method. 
----------------------
interface Sortable {
    void sort(int[] array);
}

class BubbleSort implements Sortable {
    public void sort(int[] array) {
        int n = array.length;

        for (int i = 0; i < n - 1; i++) {
            for (int j = 0; j < n - i - 1; j++) {
                if (array[j] > array[j + 1]) {
                    // swap temp and arr[i]
                    int temp = array[j];
                    array[j] = array[j + 1];
                    array[j + 1] = temp;
                }
            }
        }
    }
}

class SelectionSort implements Sortable {
    public void sort(int[] array) {
        int n = array.length;

        for (int i = 0; i < n - 1; i++) {
            int minIndex = i;
            for (int j = i + 1; j < n; j++) {
                if (array[j] < array[minIndex]) {
                    minIndex = j;
                }
            }

            int temp = array[minIndex];
            array[minIndex] = array[i];
            array[i] = temp;
        }
    }
}

public class SortDemo {
    public static void main(String[] args) {
        int[] arrayToSort = {5, 2, 9, 1, 5, 6};

        Sortable bubbleSort = new BubbleSort();
        bubbleSort.sort(arrayToSort.clone());
        System.out.println("Sorted using Bubble Sort: " + java.util.Arrays.toString(arrayToSort));

        Sortable selectionSort = new SelectionSort();
        selectionSort.sort(arrayToSort.clone());
        System.out.println("Sorted using Selection Sort: " + java.util.Arrays.toString(arrayToSort));
    }
}